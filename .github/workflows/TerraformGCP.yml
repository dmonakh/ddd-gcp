name: Terraform deploy kubernetes cluster

on:
  push:
    paths:
      - 'terraform_gcp/**'
      - '.github/workflows/TerraformGCP.yml'
    branches:
      - main
  workflow_dispatch:

env:
  BUCKET_NAME: mondybucketgcp
  SA_NAME: git-490@tidy-vent-384809.iam.gserviceaccount.com

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform_gcp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Decode credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials_file.json

      - name: Authenticate with Google Cloud
        run: |
          gcloud config set account ${SA_NAME}
          gcloud auth activate-service-account --key-file=credentials_file.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Create bucket if dosn't exists
        run: |
          if [[ $(gsutil ls gs://${BUCKET_NAME} >/dev/null; echo $?) -eq 1 ]]; then
            echo "===[ Bucket doesn't exist. Creating... ]==="
            gsutil mb -l us-central1 -c Standard -p ${{ secrets.GCP_PROJECT_ID }} -b off gs://${BUCKET_NAME}
          else
            echo "===[ Bucket already exists ]==="
          fi
          
      - name: terraform init
        run: terraform init

      - name: terraform plan
        id: plan
        run: terraform plan -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
      
      - name: terraform apply 
        if: "!contains(github.event.head_commit.message, 'destroy')"
        run: terraform apply -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -auto-approve

      - name: Upload kubeconfig artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig
          path: terraform-azure/kubeconfig 
      
      - name: Terraform Destroy
        if: contains(github.event.head_commit.message, 'destroy')
        run: terraform destroy -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -auto-approve